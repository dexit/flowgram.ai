{
  "type": "flow",
  "value": {
    "id": "431693052418",
    "nodes": [
      {
        "id": "start",
        "type": "start",
        "definition": {
          "info": {
            "title": "start",
            "description": "The starting node of the workflow, used to set the information required for the work",
            "icon": "https://lf3-static.bytednsdoc.com/obj/eden-cn/dvsmryvd_avi_dvsm/ljhwZthlaukjlkulzlp/icon/icon-Start.png"
          },
          "outputs": {
            "type": "object",
            "title": "Output",
            "properties": { "score": { "type": "integer", "default": 70, "flow": { "index": 0 } } }
          },
          "script": { "language": "python", "content": "", "mode": "default" }
        },
        "data": {}
      },
      {
        "id": "condition_fb0cde66d42",
        "type": "condition",
        "definition": {
          "info": {
            "title": "switch_mode",
            "description": "Select branches to execute based on conditions",
            "icon": "https://lf3-static.bytednsdoc.com/obj/eden-cn/fhileh7pldpfvht/blockwise/conditio_icon.svg"
          },
          "outputs": {
            "type": "object",
            "flow": { "index": 0 },
            "properties": { "rank": { "type": "string", "flow": { "index": 0 } } }
          },
          "script": { "language": "python", "content": "", "mode": "default" }
        },
        "blocks": [
          {
            "id": "case_a7fb0cde66d",
            "type": "case",
            "definition": {
              "info": {
                "title": "case_0",
                "description": "Execute the branch when the condition is met",
                "icon": "https://lf3-static.bytednsdoc.com/obj/eden-cn/dvsmryvd_avi_dvsm/ljhwZthlaukjlkulzlp/icon/icon-Condition.png"
              },
              "inputs": { "type": "object", "properties": { "condition": { "type": "boolean" } } },
              "script": { "language": "python", "content": "", "mode": "default" }
            },
            "data": {
              "condition": { "type": "expression", "content": "start.outputs.score >= 90" }
            },
            "blocks": [
              {
                "id": "variable_2324c822b75",
                "type": "variable",
                "definition": {
                  "info": {
                    "title": "assign_0",
                    "description": "You can declare and set variables here",
                    "icon": "https://lf3-static.bytednsdoc.com/obj/eden-cn/lzp^rjvsI/ljhwZthlaukjlkulzlp/Nodeicons/Variable.png"
                  },
                  "inputs": {
                    "type": "object",
                    "properties": {
                      "setVariables": {
                        "type": "object",
                        "properties": {
                          "0": {
                            "type": "object",
                            "properties": {
                              "left": { "type": "string" },
                              "operator": { "type": "string" },
                              "right": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  },
                  "outputs": { "properties": {}, "title": "Output", "type": "object" },
                  "script": { "language": "python", "content": "", "mode": "default" }
                },
                "data": {
                  "setVariables": {
                    "0": {
                      "left": { "type": "ref", "content": "$.switch_mode.outputs.rank" },
                      "right": { "type": "expression", "content": "\"Excellent\"" },
                      "operator": "assign"
                    }
                  }
                }
              }
            ]
          },
          {
            "id": "branch_0cde66d4255",
            "type": "case",
            "definition": {
              "info": {
                "title": "case_1",
                "description": "Execute the branch when the condition is met",
                "icon": "https://lf3-static.bytednsdoc.com/obj/eden-cn/dvsmryvd_avi_dvsm/ljhwZthlaukjlkulzlp/icon/icon-Condition.png"
              },
              "inputs": { "type": "object", "properties": { "condition": { "type": "boolean" } } },
              "script": { "language": "python", "content": "", "mode": "default" }
            },
            "data": {
              "condition": {
                "type": "expression",
                "content": "start.outputs.score >= 60 && start.outputs.score < 90"
              }
            },
            "blocks": [
              {
                "id": "variable_e571d5115d4",
                "type": "variable",
                "definition": {
                  "info": {
                    "title": "assign_1",
                    "description": "You can declare and set variables here",
                    "icon": "https://lf3-static.bytednsdoc.com/obj/eden-cn/lzp^rjvsI/ljhwZthlaukjlkulzlp/Nodeicons/Variable.png"
                  },
                  "inputs": {
                    "type": "object",
                    "properties": {
                      "setVariables": {
                        "type": "object",
                        "properties": {
                          "0": {
                            "type": "object",
                            "properties": {
                              "left": { "type": "string" },
                              "operator": { "type": "string" },
                              "right": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  },
                  "outputs": { "properties": {}, "title": "Output", "type": "object" },
                  "script": { "language": "python", "content": "", "mode": "default" }
                },
                "data": {
                  "setVariables": {
                    "0": {
                      "left": { "type": "ref", "content": "$.switch_mode.outputs.rank" },
                      "right": { "type": "expression", "content": "\"Normal\"" },
                      "operator": "assign"
                    }
                  }
                }
              }
            ]
          },
          {
            "id": "default_7fb0cde66d4",
            "type": "default",
            "definition": {
              "info": {
                "title": "case_default",
                "description": "Executed when all conditions are not met",
                "icon": ""
              },
              "script": { "language": "python", "content": "", "mode": "default" }
            },
            "blocks": [
              {
                "id": "variable_3f25f1be571",
                "type": "variable",
                "definition": {
                  "info": {
                    "title": "assign_2",
                    "description": "You can declare and set variables here",
                    "icon": "https://lf3-static.bytednsdoc.com/obj/eden-cn/lzp^rjvsI/ljhwZthlaukjlkulzlp/Nodeicons/Variable.png"
                  },
                  "inputs": {
                    "type": "object",
                    "properties": {
                      "setVariables": {
                        "type": "object",
                        "properties": {
                          "0": {
                            "type": "object",
                            "properties": {
                              "left": { "type": "string" },
                              "operator": { "type": "string" },
                              "right": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  },
                  "outputs": { "properties": {}, "title": "Output", "type": "object" },
                  "script": { "language": "python", "content": "", "mode": "default" }
                },
                "data": {
                  "setVariables": {
                    "0": {
                      "left": { "type": "ref", "content": "$.switch_mode.outputs.rank" },
                      "right": { "type": "expression", "content": "\"Fail\"" },
                      "operator": "assign"
                    }
                  }
                }
              }
            ]
          }
        ]
      },
      {
        "id": "end",
        "type": "end",
        "definition": {
          "info": {
            "title": "end",
            "description": "The final node of the workflow, used to return the result information after the workflow is run.",
            "icon": "https://lf3-static.bytednsdoc.com/obj/eden-cn/dvsmryvd_avi_dvsm/ljhwZthlaukjlkulzlp/icon/icon-End.png"
          },
          "inputs": {
            "type": "object",
            "properties": {
              "error": {
                "type": "object",
                "properties": { "code": { "type": "string" }, "msg": { "type": "string" } },
                "flow": { "index": 0 }
              },
              "rank": { "type": "string", "flow": { "index": 1 } }
            }
          },
          "script": { "language": "python", "content": "", "mode": "default" }
        },
        "data": { "rank": { "type": "expression", "content": "switch_mode.outputs.rank" } }
      }
    ],
    "groups": [],
    "setting": {
      "errorHandler": "\"\"\"\n当流程中的某个节点抛出异常时调用的处理函数，可用的变量如下：\n\nobserve: 用于观察或监控流程执行的对象，可以 observe.node_id/observe.node_path 等获取对应的节点信息\n\nflow_outputs: 整个流程的输出数据，可以设置其中的值\n\nnode_outputs: 抛出异常的具体节点的输出数据，可以设置其中的值\n\nexception: 捕获到的异常对象\n\n常用行为：\n1. 如果这个 handler 内部不 raise 异常出去，相当于流程继续执行\n2. 如果这个 handler 里面 raise exception 出去，流程运行结束，返回上层\n3. 这里可以设置 node_outputs\n\n\"\"\"\nraise exception"
    }
  }
}
